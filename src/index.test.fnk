{highlight_code_loc} = import '.'



describe = fn descr, tests:
  global.describe:: descr, fn:
    tests()
    undefined

it = fn descr, test:
  global.it:: descr, test
  undefined

to_equal = fn expected: fn expect_actual:
  expect_actual.toEqual:: expected

expect = fn actual, expectation:
  expectation:: global.expect:: actual



describe:: highlight_code_loc, fn:

  it:: 'highlights lines', fn:
    loc = {
      start: {line: 1, column: 5},
      end: {line: 1, column: 8}
    }

    expect::
      highlight_code_loc:: `test data\n`, loc
      to_equal:: `
        1| test data
                ^
        2| `


  it:: 'highlights at most 4 line beofre', fn:
    loc = {
      start: {line: 6, column: 5},
      end: {line: 6, column: 8}
    }

    expect::
      highlight_code_loc:: `
        line 1
        line 2
        line 3
        line 4
        line 5
        line 6
        line 7
        `, loc
      to_equal:: `
        3| line 3
        4| line 4
        5| line 5
        6| line 6
                ^
        7| line 7
        8| `


  it:: 'highlights at most 3 line after', fn:
    loc = {
      start: {line: 2, column: 5},
      end: {line: 2, column: 8}
    }

    expect::
      highlight_code_loc:: `
        line 1
        line 2
        line 3
        line 4
        line 5
        line 6
        line 7
        `, loc
      to_equal:: `
        1| line 1
        2| line 2
                ^
        3| line 3
        4| line 4
        5| line 5`


